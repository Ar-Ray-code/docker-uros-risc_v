# A Dockerfile for the micro-ROS simulation environment
FROM ubuntu:16.04
WORKDIR /root

# Install NuttX dependencies
RUN apt-get update
RUN apt-get install libssl-dev libxml2-dev pkg-config picocom screen libusb-1.0-0-dev gcc-arm-none-eabi -y
RUN apt-get install -y autotools-dev autoconf gperf flex bison libncurses5-dev libtool
RUN apt-get install python-serial openocd \
    flex bison libncurses5-dev autoconf texinfo \
    libftdi-dev libtool zlib1g-dev -y
RUN apt-get install git -y


# Set up related tools
RUN git clone https://bitbucket.org/nuttx/tools
RUN cd tools/kconfig-frontends && ./bootstrap && ./configure && make
RUN cd tools/kconfig-frontends && make install
# Update libraries
RUN /sbin/ldconfig -v

# Build the toolchains specifically for the OLIMEX STM32-E407
# According to the readme, toolchain config similar to stm32f4discovery
RUN apt-get install expect -y
RUN git clone https://bitbucket.org/nuttx/buildroot
# The following error is obtained when using this version:
    # cfns.gperf:101:1: error: ‘gnu_inline’ attribute present on ‘libc_name_p’
    # cfns.gperf:26:14: error: but not here
# RUN cd buildroot && cp configs/cortexm3-eabi-defconfig-4.6.3 .config
RUN cd buildroot && cp configs/cortexm3-eabi-defconfig-4.8.5 .config

# RUN ls
# clone the code
RUN git clone https://github.com/microROS/apps
RUN git clone https://github.com/microROS/NuttX nuttx

# select the configuration of the OLIMEX board
RUN cd nuttx && tools/configure.sh olimex-stm32-e407/nsh

#######################
# Build toolchain
#######################
# copy a script to automate the command "make oldconfig" (interative)
# the command has been generated by the instruction:
#             autoexpect make oldconfig
COPY script.exp /root
RUN chmod +x /root/script.exp
# instead of doing this, we'll use a pre-generated script
# RUN cd buildroot && make oldconfig
RUN cd buildroot && /root/script.exp

# get dependencies required to build the toolchain
RUN apt-get install gettext -y wget
RUN apt-get update && apt-get install -y build-essential bison flex gperf libgmp-dev libmpc-dev libmpfr-dev libisl-dev binutils-dev libelf-dev libexpat-dev
# Build the toolchain, fix with the paths, seems specific to this board
RUN mv buildroot nuttx/buildroot
RUN cd nuttx/buildroot && make

#######################
# Build a sample application
#######################
# # Build tools/mkconfig, yeah weird
# RUN cd nuttx && make ; exit 0
# # Build tools/mkversion
# RUN cd nuttx && make ; exit 0
# Import the toolchain in the path and make it
RUN export PATH="/root/nuttx/buildroot/build_arm_nofpu/staging_dir/bin/":$PATH && cd nuttx && make

#######################
# Install tools for deployment int the board
#######################
RUN apt-get update && apt-get install usbutils
